(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{430:function(a,s,t){"use strict";t.r(s);var n=t(7),e=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"🦃杂七杂八"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#🦃杂七杂八"}},[a._v("#")]),a._v(" 🦃杂七杂八")]),a._v(" "),s("h2",{attrs:{id:"some小细节"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#some小细节"}},[a._v("#")]),a._v(" some小细节")]),a._v(" "),s("p",[a._v("2p一定写成2*p知道吗")]),a._v(" "),s("p",[a._v("for循环的三个条件都可以省略 但是分号别忘了")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20221120153932757","data-src":"https://s1.imagehub.cc/images/2024/11/24/3de829c4f1a6cd8475627188387c1908.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("有maxsize时，比如int A[MAXSIZE]，别忘了在开头声明 #define MAXSIZE 100（数字自定）")]),a._v(" "),s("h3",{attrs:{id:"数组声明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组声明"}},[a._v("#")]),a._v(" 数组声明")]),a._v(" "),s("p",[a._v("char字符数组常见定义方式")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("char a[6]={'H','e','l','\\0'};\nchar a[6]={\"hello\"};\nchar a[]={\"hello\"};\nchar a[]=\"hello\";\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h3",{attrs:{id:"动态数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#动态数组"}},[a._v("#")]),a._v(" 动态数组")]),a._v(" "),s("p",[a._v("typedef struct{")]),a._v(" "),s("p",[a._v("​\tint *elem;//指向数组首地址")]),a._v(" "),s("p",[a._v("​\tint len;")]),a._v(" "),s("p",[a._v("}SSTable;")]),a._v(" "),s("p",[a._v("int Search(SSTable ST,int key){")]),a._v(" "),s("p",[a._v("​\tST[0]=key;")]),a._v(" "),s("p",[a._v("​\tint i =ST.len;")]),a._v(" "),s("p",[a._v("}")]),a._v(" "),s("h2",{attrs:{id:"cin-getline-与getline"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cin-getline-与getline"}},[a._v("#")]),a._v(" cin.getline()与getline()")]),a._v(" "),s("p",[a._v("https://www.cnblogs.com/hhddcpp/p/4308974.html")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220329225635551","data-src":"https://s1.imagehub.cc/images/2024/11/24/076a03e4c577a5d6504b8ad7de47accf.png",loading:"lazy"}})]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220329225700975","data-src":"https://s1.imagehub.cc/images/2024/11/24/70e7bc60b0340f065653a711642c0062.png",loading:"lazy"}})]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220329230114360","data-src":"https://s1.imagehub.cc/images/2024/11/24/f253629245ab583af74c5bab793f3a0c.png",loading:"lazy"}})]),a._v(" "),s("h2",{attrs:{id:"reverse"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reverse"}},[a._v("#")]),a._v(" Reverse()")]),a._v(" "),s("p",[a._v("https://blog.csdn.net/YMWM_/article/details/115468297")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220415150048709","data-src":"https://s1.imagehub.cc/images/2024/11/24/5f61e7381d660918183e26f5b42057ac.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("a是数组名")]),a._v(" "),s("p",[a._v("//12345")]),a._v(" "),s("p",[a._v("//54321")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220415150202076","data-src":"https://s1.imagehub.cc/images/2024/11/24/dc54731e6777b9effffbd0ca684a16d0.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("(迭代器不是vector特有的，有迭代器不意味着就是向量)")]),a._v(" "),s("p",[a._v("//asdfg")]),a._v(" "),s("p",[a._v("//gfdsa")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220415150753002","data-src":"https://s1.imagehub.cc/images/2024/11/24/f4cd18b39314989f9f411f2bb14b400c.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("//（vector保存的）12345")]),a._v(" "),s("p",[a._v("//54321")]),a._v(" "),s("h2",{attrs:{id:"find-find-first-of"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#find-find-first-of"}},[a._v("#")]),a._v(" find&find_first_of")]),a._v(" "),s("p",[a._v("find可以省略第一个参数或者第二个参数，也可以两个参数都省略。")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220402163756003","data-src":"https://s1.imagehub.cc/images/2024/11/24/50461851061aa28d87ef95e5b471c156.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("https://blog.csdn.net/IOT_Change/article/details/8496977")]),a._v(" "),s("h3",{attrs:{id:"中string-npos的一些用法总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#中string-npos的一些用法总结"}},[a._v("#")]),a._v(" 中string::npos的一些用法总结")]),a._v(" "),s("p",[a._v("https://blog.csdn.net/jiejinquanil/article/details/51789682")]),a._v(" "),s("p",[a._v("下面是读到上面的链接给我的一些收获：")]),a._v(" "),s("p",[a._v("static const size_type npos = -1;")]),a._v(" "),s("p",[s("strong",[a._v("size_type")]),a._v("是由string类和vector类定义的类型，保存任意string对象或者vector对象的长度。（如果长度是个不存在的数字，即-1，就交由npos承接这个数字）size_type是一种无符号类型。size_type在不同的机器上长度也是不一样的哦（它和下面的size_t都便于在不同机器间移植）")]),a._v(" "),s("p",[a._v("（补充一下常见的size_t，它是一个无符号整形，在32位系统上是unsigned int，在64位系统上是unsigned long。它的大致含义是内存中可容纳的数据项目的个数）")]),a._v(" "),s("p",[a._v("https://blog.csdn.net/weixin_38736371/article/details/82972953")]),a._v(" "),s("hr"),a._v(" "),s("p",[a._v("一般使用npos的时候是如下情况：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('string name("Annapig");\nif(name.find("Anna")==string::npos)\n    cout<<"Anna not found!\\n";\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("find返回string::size_type类型，而npos我们也不会单独使用，要带上string::npos，")]),a._v(" "),s("p",[a._v("所以它俩类型吻合，像下面这种情况")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220402170335561","data-src":"https://s1.imagehub.cc/images/2024/11/24/51831a1d43ff253bed8f2ec47c91bc7b.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v('代码第三行pos是int类型，虽然调试上，结果上也没有什么错误显示，出来的结果也是我们想要的，但类型不是很匹配就是有风险，最好还是写成if(name.find("Anna")==string::npos)')]),a._v(" "),s("hr"),a._v(" "),s("p",[s("strong",[a._v("npos两个可爱小用法：")])]),a._v(" "),s("h3",{attrs:{id:"计算字符串中含有不同字符的个数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#计算字符串中含有不同字符的个数"}},[a._v("#")]),a._v(" 计算字符串中含有不同字符的个数")]),a._v(" "),s("p",[a._v("=="),a._v("==")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("#include <iostream>\n#include <string>\nusing namespace std;\nint main()\n{\n    string b;\n    getline(cin,b);\n    int count=0;\n    for(int i=0;i<=127;i++)\n        if(b.find(i)!=string::npos)\t//⭐\n        count++;\n    cout<<count;\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br")])]),s("p",[a._v("画星星那一行，b.find(i)，省略了find的前两个参数，即在b里要查找的区间。i指的是要查找的东西，你可能觉得i是个数字，代表着区间的一部分，实际上i作为数字，是一个编码，在char里每个字符都有对应的编码，编码由0-127，有128种")]),a._v(" "),s("p",[a._v("b.find(i)就是查找b中是否有编码为0的字符？1呢？2呢？")]),a._v(" "),s("p",[s("strong",[a._v("甚至你可以记住char里0-9的ASCII值！然后查找b里是否这9个数字都存在（万一题目要求了呢？嘿嘿）")])]),a._v(" "),s("p",[a._v("如果有的话，就会进入if语句，count++，")]),a._v(" "),s("p",[a._v("并且由于我们是从0到127查找，所以不会重复查找某个字符（毕竟0-127每个字符不一样嘛）")]),a._v(" "),s("p",[a._v("=="),a._v("==  （带⭐那一行）")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('#include <iostream>  \n#include <limits>  \n#include <string>  \nusing namespace std;  \nint main()  \n{  \n    string filename = "test.cpp";  \n    cout << "filename : " << filename << endl;  \n  \n    size_t idx = filename.find(\'.\');   //idx==4 \n    if(idx == string::npos)      \n    {  \n        cout << "filename does not contain any period!" << endl;  //文件名不包含任何句点\n        //大概文件名长这样：test，而不是test. 因为没找到才会返回-1\n    }  \n    else  \n    {  \n        string tmpname = filename;  \n        tmpname.replace(idx + 1, string::npos, "xxx"); //⭐string::npos作为长度参数，表示直到字符串结束  \n        cout << "repalce: " << tmpname << endl;  \n    }  \n}  \n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br")])]),s("p",[a._v("string::npos表示字符串结束的地方")]),a._v(" "),s("h2",{attrs:{id:"stl-vector"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stl-vector"}},[a._v("#")]),a._v(" STl&vector")]),a._v(" "),s("p",[a._v("vector相当于数组，大小不用指定，通过你输入的大小自动识别。")]),a._v(" "),s("p",[a._v("size()\t//返回vector元素数量的大小")]),a._v(" "),s("p",[a._v("empty()\t//返回数组是否为空，如果有，则不为空，返回0。")]),a._v(" "),s("p",[a._v("clear()")]),a._v(" "),s("p",[a._v("front()\t//返回数组第一个元素的值   back()\t//返回数组最后一个元素的值")]),a._v(" "),s("p",[a._v("push_back()//插入一个数在vector里面  pop_back()//弹出vector末尾的元素")]),a._v(" "),s("p",[a._v("begin()  end()迭代器")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    vector<int>v;\t//vector是名字 int是类型 可以换成其他数据结构类型 v是变量名\n\t\t//兄弟们初始化还是要有的，当然也可以声明一下大小哈vector<int>v(10);初始化10个默认为0的数\n\t\t//初始化10个默认为1的元素\n\n//插入\nv.push_back(4);\t//a[0]=4;\nv.push_back(2); //a[1]=2;\n//访问或遍历\ncout<<v[0]<<endl;\nfor(int i = 0;i<v.size();i++){\n    cout<<v[i]<<endl;\n}\n//判空\ncout<<v.empty()<<endl;\t//0 即不为空\n\n//清空 (clear)\ncout<<v.size()<<endl;\t//2(之前我们插入了两个元素)\nv.clear();\t//清空元素而非内存\ncout<<v.size()<<endl;\t//0\n\n//⭐迭代器begin();\tend();\n//迭代器用来访问vector的每一个元素\nvector<int>::iterator it;\t//定义一个类型为vector<int>迭代器\nfor(it=v.begin();it!=v.begin();it++){\n    cout<<it<<endl;\n}\n//[]索引\nv[0]=1000;\t\n//[]比较运算\nsort(v.begin(),v.end());\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br"),s("span",{staticClass:"line-number"},[a._v("27")]),s("br"),s("span",{staticClass:"line-number"},[a._v("28")]),s("br"),s("span",{staticClass:"line-number"},[a._v("29")]),s("br"),s("span",{staticClass:"line-number"},[a._v("30")]),s("br")])]),s("h2",{attrs:{id:"数字转化成string"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数字转化成string"}},[a._v("#")]),a._v(" 数字转化成string")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220404144659381","data-src":"https://s1.imagehub.cc/images/2024/11/24/3e86ec917759fd968d1b93cd92e59135.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("讲解一下什么是**format：**Printf()函数的一般形式为printf(“format”,输出表列)，其第一个参数就是格式化字符串，用来告诉程序以什么格式进行输出。例如：printf(“%s”,str); 可以将format理解为%blabla；")]),a._v(" "),s("p",[a._v("https://blog.csdn.net/jllongbell/article/details/79092891")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220407051810743","data-src":"https://s1.imagehub.cc/images/2024/11/24/18b03291bd73b9dc23de149447db8f94.png",loading:"lazy"}})]),a._v(" "),s("h3",{attrs:{id:"sprintf"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sprintf"}},[a._v("#")]),a._v(" sprintf()")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int sprintf ( char * str, const char * format, ... );\n//注意第一个参数是char类型不是string类型\n//format后面还有参数\n//根据格式字符串的不同，该函数可能需要一系列附加参数，每个参数都包含一个值，用于替换格式字符串中的格式说明符（或指向存储位置的指针，对于 n）\n//这些参数的数量至少应与格式说明符中指定的值数一样多。该函数将忽略其他参数。\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[a._v("作用：将formatted data（格式化数据） 转化成 string（字符串）")]),a._v(" "),s("p",[a._v("Composes a string with the same text that would be printed if "),s("em",[a._v("format")]),a._v(" was used on "),s("a",{attrs:{href:"http://www.cplusplus.com/printf",target:"_blank",rel:"noopener noreferrer"}},[a._v("printf"),s("OutboundLink")],1),a._v(", but instead of being printed, the content is stored as a "),s("em",[a._v("C string")]),a._v(" in the buffer(缓冲区) pointed by "),s("em",[a._v("str")]),a._v(".")]),a._v(" "),s("p",[a._v("把将要"),s("em",[a._v("打印")]),a._v("的相同文本组成一个字符串（前提：它们的确用于打印），这个整体的字符串结尾会被加入一个空字符，然后这个字符串会被存放在缓冲区，缓冲区的大小应该足够大去存放那个组合起来的字符串。")]),a._v(" "),s("p",[a._v("成功时，将返回写入的字符总数。此计数不包括自动追加在字符串末尾的其他空字符。\n失败时，返回负数。")]),a._v(" "),s("p",[a._v("在 "),s("em",[a._v("format")]),a._v(" 参数之后，该函数需要的附加参数至少与格式所需的参数"),s("em",[a._v("一")]),a._v("样多。")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220404162921710","data-src":"https://s1.imagehub.cc/images/2024/11/24/127e9a93734664f1cb63aeee3e422f90.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v('我们分析下面这个函数，sprintf把buffer(未初始化数组)和"%d plus %d is %d"连接在了一起组成了一个新的字符串，此时buffer变成了5 plus 3 is 8。（说明sprintf带来的改变不是即刻的，是确确实实会改变buffer）')]),a._v(" "),s("p",[a._v("此时buffer是一个字符串，字符串是一个字符数组")]),a._v(" "),s("p",[a._v("sprintf会返回一个Int型，Int型是写入的字符总数，5 plus 3 is 8 即13个 ，你数数呗~")]),a._v(" "),s("div",{staticClass:"language-C line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-c"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("//要求用string接收")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("/* sprintf example */")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token macro property"}},[s("span",{pre:!0,attrs:{class:"token directive-hash"}},[a._v("#")]),s("span",{pre:!0,attrs:{class:"token directive keyword"}},[a._v("include")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("<stdio.h>")])]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("main")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("char")]),a._v(" buffer "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("50")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("5")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" b"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  n"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("sprintf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"%d plus %d is %d"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" a"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("+")]),a._v("b"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("printf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"[%s] is a string %d chars long\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("buffer"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Console:[5 plus 3 is 8] is a string 13 chars long\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"stringstream"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stringstream"}},[a._v("#")]),a._v(" stringstream")]),a._v(" "),s("p",[a._v("sstream定义了三个类：istringstream,ostringstream,stringstream分别用来进行流的输入、输出和输入输出操作。")]),a._v(" "),s("p",[a._v("https://blog.csdn.net/liitdar/article/details/82598039?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0.pc_relevant_default&spm=1001.2101.3001.4242.1&utm_relevant_index=3")]),a._v(" "),s("p",[a._v("=="),a._v("==")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('//首先我们来理解一下cin cout箭头的方向\n//cin>>n指的是输入流输出到变量，cout<<n指的是n输入到输出流（屏幕上）\n#include <blabla>\nint main(){\n    int nValue = 1024;\n    stringstream ss;\n    string str;\t\t//存放最终cout结果的\n    //将int型变量放入输入流中\n    ss<<nValue;\n    //将nvalue的值从ss中抽取出来给str\n    ss>>str;\n    \n    cout<<str<<endl;\t//1024\n}\n\n❤\n//也可以这样写哦\nint main(){\n    int value ;\n    stringstream ss;\n    ss<<"1024";\n    ss>>value;\n    cout<<value;\t//1024\n}\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br")])]),s("h3",{attrs:{id:"字符串拼接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串拼接"}},[a._v("#")]),a._v(" 字符串拼接")]),a._v(" "),s("p",[a._v("=="),a._v("==")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('int main(){\n    stringstream ss;\n    ss<<"a"<<""<<"b"<<endl;\t//这好几个字符串是待会儿我们要拼起来的~\n    cout<<ss.str()<<endl;//当然啦！\n    你也可以写成string str1;ss>>str1;cout<<str1;\n    //str()更简便了~用它是直接把stringstream类型转化成了string类型\n}\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("h4",{attrs:{id:"stringstream的清空"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stringstream的清空"}},[a._v("#")]),a._v(" stringstream的清空")]),a._v(" "),s("p",[a._v("=="),a._v("==")]),a._v(" "),s("p",[a._v('第一种： str("")方法')]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('stringstream ss;\nss<<"先输入一些东西嘿嘿";\ncout<<ss.str()<<endl;\nss.str("");\ncout<<ss.str(); //空的\nss<<"第二波僵尸正在来袭";\ncout<<ss.str();\t//"第二波僵尸正在来袭"\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("p",[a._v("第二种：clear方法")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('stringstream ss;\nss<<"123123";\nint n;\nss>>n;\ncout<<n<<endl;\n//可以看出下面类型转化用的是另一种方式~\n//在进行不同的类型转化时，必须使用clear()方法哦\nss.clear();\t\n\nss<<true; //插入bool值\nss>>n;\t//把bool转化成Int类型\ncout<<n<<endl;\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br")])]),s("h4",{attrs:{id:"cin输入流的情空"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cin输入流的情空"}},[a._v("#")]),a._v(" cin输入流的情空")]),a._v(" "),s("p",[a._v("ignore是istream类（cin）的成员函数")]),a._v(" "),s("p",[a._v("用ignore()前一定要考虑到！")]),a._v(" "),s("p",[a._v("cin.ignore(int n ,char a);")]),a._v(" "),s("p",[a._v("会跳输入流中的n个字符或跳过a及其之前的所有字符")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int n;\ncin.ignore(5,'A');\ncin>>n;\t\t//12345678\ncout<<n;\t//678\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int n;\ncin.ignore(5,'A');\ncin>>n;\t\t//12A345678\ncout<<n;\t//345678\t//感觉是以char为优先的\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[a._v("如果cin.ignore()什么参数都不输入等价于这个cin.ignore(1, EOF)\t//跳过一个字符")]),a._v(" "),s("h3",{attrs:{id:"to-string-数字转化成字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#to-string-数字转化成字符串"}},[a._v("#")]),a._v(" to_string() 数字转化成字符串")]),a._v(" "),s("p",[a._v("https://blog.csdn.net/qq_18815817/article/details/82431685?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522164933363116780357211373%2522%252C%2522scm%2522%253A%252220140713.130102334.pc%255Fall.%2522%257D&request_id=164933363116780357211373&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v1~rank_v31_ecpm-1-82431685.142^v7^pc_search_result_cache,157^v4^control&utm_term=to_string&spm=1018.2226.3001.4187")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220407201618763","data-src":"https://s1.imagehub.cc/images/2024/11/24/5a8eb8894deba6c104842ced774993d6.png",loading:"lazy"}})]),a._v(" "),s("h2",{attrs:{id:"判断字符串是否是数字"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#判断字符串是否是数字"}},[a._v("#")]),a._v(" 判断字符串是否是数字")]),a._v(" "),s("blockquote",[s("p",[a._v("**isdigit:**函数原型：int isdigit ( int c );")])]),a._v(" "),s("blockquote",[s("p",[a._v("如果是数字，它会返回true，否则是false")])]),a._v(" "),s("p",[a._v("如果输入的不是Int，它也会转化成int，比如")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('string str = "123ccc";\nint isdigit(str[0]){\n   // blabla写点你想实现的功能\n}\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[a._v("当然啦，你会说也许str[0]是数字，万一后面不是呢？我们这个也只是在题的一个假设条件中嘛，现在我们来遍历一下str")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('//检查str是否有一项不是数字\nstring str = "123ccc"\nfor(int i = 0;i<str.length();i++){\n    if(!isdigit(str[i])){cout<<"的确有不是数字的项"<<endl;break;}\n}\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h2",{attrs:{id:"获取数组长度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取数组长度"}},[a._v("#")]),a._v(" 获取数组长度")]),a._v(" "),s("p",[a._v("https://blog.csdn.net/LiuXF93/article/details/121202223")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20221106135212969","data-src":"https://s1.imagehub.cc/images/2024/11/24/e08642252ae4032954c429af407a201a.png",loading:"lazy"}})]),a._v(" "),s("h2",{attrs:{id:"获取字符串长度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#获取字符串长度"}},[a._v("#")]),a._v(" 获取字符串长度")]),a._v(" "),s("p",[a._v("https://blog.csdn.net/the_sea1/article/details/102549069")]),a._v(" "),s("h2",{attrs:{id:"find-first-not-of-str"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#find-first-not-of-str"}},[a._v("#")]),a._v(" "),s("strong",[a._v("find_first_not_of")]),a._v("（str）")]),a._v(" "),s("p",[a._v("在字符串搜索第一个不属于str的字符")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220410115014044","data-src":"https://s1.imagehub.cc/images/2024/11/24/32db633b5480da3824c7958b81c49643.png",loading:"lazy"}})]),a._v(" "),s("h2",{attrs:{id:"find-first-of"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#find-first-of"}},[a._v("#")]),a._v(" "),s("strong",[a._v("find_first_of")])]),a._v(" "),s("p",[a._v("在字符串中搜索属于 str,s 或 c 的任何字符，并返回字符串中第一次出现的位置。")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220410115034053","data-src":"https://s1.imagehub.cc/images/2024/11/24/2ef7c89c0ad38e72302e27aaef4580e7.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("https://blog.csdn.net/ffjbq/article/details/7611255")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220410115405811","data-src":"https://s1.imagehub.cc/images/2024/11/24/bda32714657e4e4a59571ebdef3496d9.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("是不是很妙啊")]),a._v(" "),s("h2",{attrs:{id:"strncpy"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#strncpy"}},[a._v("#")]),a._v(" strncpy()")]),a._v(" "),s("p",[s("strong",[a._v("char *strncpy(char *dest, const char *src, size_t n)")])]),a._v(" "),s("p",[a._v("把src中的东西放到dest中，复制n个字符（这个第三个参数也可以写成sizeof(src)）")]),a._v(" "),s("p",[a._v("https://www.runoob.com/cprogramming/c-function-strncpy.html")]),a._v(" "),s("h2",{attrs:{id:"复制子字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#复制子字符串"}},[a._v("#")]),a._v(" 复制子字符串")]),a._v(" "),s("p",[a._v("https://blog.csdn.net/yjx4102/article/details/79319305")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220415163630188","data-src":"https://s1.imagehub.cc/images/2024/11/24/8c91772d88aac69d19e311eb78d4f950.png",loading:"lazy"}})]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220415163651606","data-src":"https://s1.imagehub.cc/images/2024/11/24/4c04bc6a62ca22de5b39fbff081a794d.png",loading:"lazy"}})]),a._v(" "),s("h2",{attrs:{id:"replace-yyds"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#replace-yyds"}},[a._v("#")]),a._v(" replace yyds!")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    string str=\"123/421657/abcd///456789\";\n    cout << str << endl;\n    replace(str.begin(),str.end(),'/',' ');\n    cout << str << endl;\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220415165745575","data-src":"https://s1.imagehub.cc/images/2024/11/24/d0c4f4e5d945fbfd149b8108aa48d22c.png",loading:"lazy"}})]),a._v(" "),s("h2",{attrs:{id:"string比较功能"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string比较功能"}},[a._v("#")]),a._v(" string比较功能")]),a._v(" "),s("p",[a._v("http://c.biancheng.net/view/1447.html")]),a._v(" "),s("h2",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[a._v("#")]),a._v(" ---------------------------------------")]),a._v(" "),s("h2",{attrs:{id:"c-数组-不讲vector"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#c-数组-不讲vector"}},[a._v("#")]),a._v(" C++数组（不讲vector）")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220225230544900","data-src":"https://s1.imagehub.cc/images/2024/11/24/f82a999bfdeb1a15f6aa39366ccc8ed3.png",loading:"lazy"}})]),a._v(" "),s("h3",{attrs:{id:"数组初始化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数组初始化"}},[a._v("#")]),a._v(" 数组初始化")]),a._v(" "),s("p",[s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://s1.imagehub.cc/images/2024/11/24/d393c2433368b1825f191bd3a0ae21ca.png",alt:"image 20220225230617109"}}),s("strong",[a._v("第二种自动填充0")])]),a._v(" "),s("h4",{attrs:{id:"初始化的要点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#初始化的要点"}},[a._v("#")]),a._v(" 初始化的要点")]),a._v(" "),s("p",[a._v("给数组默认填充为0的前提是你的初始化值没给够才会给剩下的地方填入0")]),a._v(" "),s("p",[a._v("如果你直接写个int Times[7]是不会给你填充0的")]),a._v(" "),s("p",[a._v("给出值，编译器自动计算数组大小")]),a._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://s1.imagehub.cc/images/2024/11/24/d4b1b480b5fa328155844c7647e0420e.png",alt:"image 20220225230700811"}}),a._v(" "),s("hr"),a._v(" "),s("p",[s("strong",[a._v("引用")])]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220225230848870","data-src":"https://s1.imagehub.cc/images/2024/11/24/91b2b5ecaa31b86d609b37ee2cbd86eb.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("上面第二点是因为访问程序已经在运行了，所以可以使用变量作为索引")]),a._v(" "),s("hr"),a._v(" "),s("p",[s("strong",[a._v("二维数组")])]),a._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://s1.imagehub.cc/images/2024/11/24/eb7723cd63a631589fa00a24dacd8b92.png",alt:"image 20220225231130921"}}),a._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"C:\\Users\\朱嘉宜\\AppData\\Roaming\\Typora\\typora-user-images\\image-20220225231146651.png",alt:"image-20220225231146651"}}),a._v(" "),s("hr"),a._v(" "),s("p",[s("strong",[a._v("数组作为参数")])]),a._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://s1.imagehub.cc/images/2024/11/24/c143a293d6e490d9f8ea46d406d94520.png",alt:"image 20220225231350517"}}),a._v(" "),s("p",[a._v("上图倒数第三行传递的是指针")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220225231429030","data-src":"https://s1.imagehub.cc/images/2024/11/24/b513acfd86076fe174c6784a2cc7984e.png",loading:"lazy"}})]),a._v(" "),s("hr"),a._v(" "),s("p",[a._v("🎣:刷题")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220225231752920","data-src":"https://s1.imagehub.cc/images/2024/11/24/386d8e77155367e83cddab278808c111.png",loading:"lazy"}})]),a._v(" "),s("h3",{attrs:{id:"接收数组"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接收数组"}},[a._v("#")]),a._v(" 接收数组")]),a._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://s1.imagehub.cc/images/2024/11/24/77accad994a8a87eea2f1fbf35c5ec8a.png",alt:"image 20220225232240636"}}),a._v(" "),s("p",[a._v("https://www.bilibili.com/video/BV1u7411v7TJ?p=3")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220225232615976","data-src":"https://s1.imagehub.cc/images/2024/11/24/bb0448ddd812c98b9e95f140f771adc5.png",loading:"lazy"}})]),a._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://s1.imagehub.cc/images/2024/11/24/e9523c63b46a59b9bc257ede2f66deb8.png",alt:"image 20220225234309183"}}),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int times[100];\nint sum = 0;\nfor(int i = 0;i<99;i++){\n    cin>>times[i];\n    if(times[i]==0)break;\n    sum++;\n}\nfor(int i = sum;i>=0;i--){\n    \n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br")])]),s("h2",{attrs:{id:"string-可动态增长的字符序列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string-可动态增长的字符序列"}},[a._v("#")]),a._v(" string 可动态增长的字符序列")]),a._v(" "),s("h3",{attrs:{id:"访问和遍历"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#访问和遍历"}},[a._v("#")]),a._v(" "),s("strong",[a._v("访问和遍历")])]),a._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://s1.imagehub.cc/images/2024/11/24/403fe21762412e8d1d0a2961f93c6472.png",alt:"image 20220301143723866"}}),a._v(" "),s("p",[a._v("at与方括号相比有个安全检查，假如数组有15个，而str.at(16)就会报错，str[16]会给一个未知值")]),a._v(" "),s("p",[s("strong",[a._v("迭代器遍历容易报错，还是老实用普通遍历吧")])]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220301144300293","data-src":"https://s1.imagehub.cc/images/2024/11/24/53e5287e3ddf86f7903e75db92cfed40.png",loading:"lazy"}})]),a._v(" "),s("hr"),a._v(" "),s("h3",{attrs:{id:"string的大小操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string的大小操作"}},[a._v("#")]),a._v(" string的大小操作")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220301144603171","data-src":"https://s1.imagehub.cc/images/2024/11/24/8bc6303a63785140d41a086462aa55f2.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("str.size()和str.length()没什么区别，但建议用str.size()")]),a._v(" "),s("p",[a._v("由于string容量动态增长，所以右边的str.capacity()用不到（用来求容量的）")]),a._v(" "),s("p",[a._v("第四个max_size()也用不到")]),a._v(" "),s("p",[a._v("⭐resize()可以改变字符串的长度，"),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://s1.imagehub.cc/images/2024/11/24/a1d2a502aeb6508405485c8f0cb68d12.png",alt:"image 20220301145043277"}})]),a._v(" "),s("p",[a._v("如果短于字符串长度会用第二个字符填充，长于字符串长度会截取")]),a._v(" "),s("p",[a._v("reserve()用不到，注意reserve是预定的意思，用来修改字符串长度，reverse才是倒转的意思")]),a._v(" "),s("p",[a._v("⭐clear()")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220301145648672","data-src":"https://s1.imagehub.cc/images/2024/11/24/da891591ee30cd7fe7b5f1d6d11e7b2a.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("使用以后会清空")]),a._v(" "),s("p",[a._v("⭐判空empty() 也可以用作截止流哦")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220301145731706","data-src":"https://s1.imagehub.cc/images/2024/11/24/919ec5c8fc3056df346d74bd11120340.png",loading:"lazy"}})]),a._v(" "),s("hr"),a._v(" "),s("h3",{attrs:{id:"string的修改操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string的修改操作"}},[a._v("#")]),a._v(" string的修改操作")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220316162152979","data-src":"https://s1.imagehub.cc/images/2024/11/24/56fda04615d43ee8ae189d001ac3cccb.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("注意operator就是一个操作符，他不是一个名字，所以在使用的时候不会出现operator")]),a._v(" "),s("p",[a._v("第1个operator使用的时候你比如说你有两串字符串，你可以利用 Operator把这些字符串连在一起，用法是比如你现在有的两串字符串是a和b， a里面是hello world b里面是C++，"),s("strong",[a._v("a+b")]),a._v("或者"),s("strong",[a._v("a+=b")]),a._v(",分别")]),a._v(" "),s("ul",[s("li",[s("p",[a._v("cout<<a+b,")])]),a._v(" "),s("li",[s("p",[a._v("和a+=b,cout<<a;")])])]),a._v(" "),s("p",[a._v("在第1个写法里面， "),s("strong",[a._v("a并没有被改变")]),a._v("，等你输出a的时候，它仍旧是hello world在第2个写法里面a被改变了，它成了hello worldC++")]),a._v(" "),s("p",[a._v("但在第2个写法里，a被改变了")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220316162152979","data-src":"https://s1.imagehub.cc/images/2024/11/24/56fda04615d43ee8ae189d001ac3cccb.png",loading:"lazy"}})]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220316164930893","data-src":"https://s1.imagehub.cc/images/2024/11/24/71b6d9e74b615229b33fd868125eae9d.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("下面是"),s("strong",[a._v("append")]),a._v("（添加）操作，在第1个里面，a.append(b)将a和b合在一起了，这个时候a就变化了，变成了hello world C++，")]),a._v(" "),s("p",[a._v("第2个里面加入了一些参数，在string类的方法里面，一般两个参数里面，前一个指的是索引，后一个指的是个数，也就是说从某个索引开始取几个个数的东西")]),a._v(" "),s("p",[a._v("所以在这个里面我们就是在b里面从0开始取两个，即C+，但这个也仅仅是append返回的一个值，你把这个值再加到a，后面cout的时候，将会是 Hello worldC+")]),a._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://s1.imagehub.cc/images/2024/11/24/3980314d10d65b5b000c32aaeda89044.png",alt:"image 20220316165811518"}}),a._v(" "),s("p",[s("strong",[a._v("push back")])]),a._v(" "),s("p",[a._v("放入一个字符到字符串的最后一个，顺序是栈（即最先放进去的最后取出）")]),a._v(" "),s("p",[a._v("Arr.push_back(1);Arr.push_back(2);Arr.push_back(3);Arr.push_back(4);")]),a._v(" "),s("p",[a._v("遍历输出：4 3 2 1")]),a._v(" "),s("p",[s("strong",[a._v("pop_back")])]),a._v(" "),s("p",[a._v("删除字符串的最后一个字符，长度减一，不返回任何值哦")]),a._v(" "),s("p",[a._v("str.pop_back();")]),a._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://s1.imagehub.cc/images/2024/11/24/18b29707d23053d88c2f9267e1af7e09.png",alt:"image 20220316173608601"}}),a._v(" "),s("p",[s("strong",[a._v("assign（不常用）")])]),a._v(" "),s("p",[a._v("改名字用的")]),a._v(" "),s("p",[a._v("a.assign(b)；")]),a._v(" "),s("p",[a._v("a就被改成b了，cout<<a;\t//C++")]),a._v(" "),s("p",[a._v("也可以写成a = b;")]),a._v(" "),s("p",[a._v("assign的修改是有效的，不会只持续一下")]),a._v(" "),s("p",[s("strong",[a._v("insert(常用）")])]),a._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://s1.imagehub.cc/images/2024/11/24/58820398a6bbcadcbfc1970aa3c933ae.png",alt:"image 20220316171251657"}}),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220316171302083","data-src":"https://s1.imagehub.cc/images/2024/11/24/55dc1f25a9ee9fc03dea2f8703607b9a.png",loading:"lazy"}})]),a._v(" "),s("hr"),a._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://s1.imagehub.cc/images/2024/11/24/7ac8ecb949c758f74b38a3fd5c91c5b0.png",alt:"image 20220316171346961"}}),a._v(" "),s("p",[a._v("四个参数，用人话翻译一下就是在hello world里面的第0个位置，插入abcdefg，但是又不全插abcdefg里面从第3个位置开始插入4个，也就是只插入defg")]),a._v(" "),s("hr"),a._v(" "),s("p",[a._v('a.insert(0,"abdbuia");')]),a._v(" "),s("p",[a._v("也可插入自己定义的临时变量")]),a._v(" "),s("p",[s("strong",[a._v("replace")]),a._v("(替换)")]),a._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://s1.imagehub.cc/images/2024/11/24/f3a66c318ca9c3b01a9aac164eebc53a.png",alt:"image 20220316171804078"}}),a._v(" "),s("p",[a._v("三个参数翻译一下，就是在a里面从第3个字符开始，往后数两个字符，替换成后面那串字符串")]),a._v(" "),s("p",[a._v("cout<<a<<endl;\t//HeQQBF World.")]),a._v(" "),s("p",[a._v("这里面容易混淆的一点是，你不太清楚这个参数里面的前两个参数到底是针对a设定的还是针对我后面要插入的字符串设定的，")]),a._v(" "),s("p",[a._v("实际上如果我们想要针对后面的字符串设定它的索引长度，我们应该是在这个字符串的后面加入参数，而不是在前面加入参数，所以前面的参数一定是针对原本的a原本的字符串设定的")]),a._v(" "),s("p",[s("strong",[a._v("swap")])]),a._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://s1.imagehub.cc/images/2024/11/24/7e6e2193a062c773aa4b5203eaaafb00.png",alt:"image 20220316172226906"}}),a._v(" "),s("p",[a._v("swap可以对ab进行交换")]),a._v(" "),s("p",[s("strong",[a._v("erase")]),a._v("(擦除)")]),a._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://s1.imagehub.cc/images/2024/11/24/6fb8276b1f0a18ae1e80411c272ad4ff.png",alt:"image 20220316172535598"}}),a._v(" "),s("p",[a._v("从第3个位置开始擦除5个，helrld")]),a._v(" "),s("h3",{attrs:{id:"string高阶技巧"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#string高阶技巧"}},[a._v("#")]),a._v(" string高阶技巧")]),a._v(" "),s("p",[s("strong",[a._v("atoi：")]),a._v("\tchar->int\t（atoi是char to int）")]),a._v(" "),s("p",[s("strong",[a._v("atof：")]),a._v("\tchar->double")]),a._v(" "),s("p",[s("strong",[a._v("itoa:")]),a._v("\t\tint->char")]),a._v(" "),s("p",[a._v("用法："),s("img",{staticClass:"lazy",attrs:{alt:"image 20220318171123773","data-src":"https://s1.imagehub.cc/images/2024/11/24/5638bcc93d77b8021072ad535ea8974e.png",loading:"lazy"}})]),a._v(" "),s("hr"),a._v(" "),s("h3",{attrs:{id:"find"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#find"}},[a._v("#")]),a._v(" "),s("strong",[a._v("find:")])]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220318171329883","data-src":"https://s1.imagehub.cc/images/2024/11/24/0736747f9cf9c8cc7efe4c364a8fd314.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("find的字面意思是寻找，这里面如果你想要在a里面找到b这样一串字符串所在的位置，你就可以使用第4行那样的写法，等号右边会返回一个数字，返回的数字也就是第1次找到这个字符串的位置，也就是0，")]),a._v(" "),s("p",[a._v("在存储变量的时候我们使用了found,按理说这只是一个名字而已，没有什么好讲的，只不过如果用found的话，会显得你比较的内行，他们有一点小小的配套，当然你可以使用别的名字")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220318171814660","data-src":"https://s1.imagehub.cc/images/2024/11/24/6ba11f5d1ce1cf7f31f813f15692ef9d.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("在这里面这一个!=右边它其实是指的-1，即string::npos==-1，只不过我们用了一个这样的写法")]),a._v(" "),s("hr"),a._v(" "),s("p",[a._v("在find里面第1个例子的时候，我们问hello，到底在hello字符串的哪个位置？实际上a中有两个hello")]),a._v(" "),s("p",[a._v("实际上这是find第二个参数的作用")]),a._v(" "),s("p",[a._v("之前我们只写了第一个参数，即a.find(b)，如果你这么写，a.find(b,found+1)，第二个参数的意思是从哪个位置开始找（注意不是从found开始找哦，是found+1）")]),a._v(" "),s("p",[a._v("那么其实a中有三个hello，怎么让它从第二个hello往后找呢？")]),a._v(" "),s("p",[a._v("found = a.find(b,found+1)")]),a._v(" "),s("p",[a._v("此时我们found存储的是第2个hello的位置，")]),a._v(" "),s("p",[a._v("如果你再写这么一句，就会存储第三个hello的位置")]),a._v(" "),s("p",[a._v("found = a.find(b,found+1)")]),a._v(" "),s("p",[s("strong",[a._v("rfind")])]),a._v(" "),s("p",[a._v("先找最后一个")]),a._v(" "),s("p",[s("strong",[a._v("Substr")])]),a._v(" "),s("p",[a._v("sub是下（在继承里也有子的意思），substr是子字符串的意思")]),a._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://s1.imagehub.cc/images/2024/11/24/eb58fd78399fb416c9b40af88d73cf6d.png",alt:"image 20220318173008611"}}),a._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://s1.imagehub.cc/images/2024/11/24/270a617f2c2c51ab59ee0550f320cce1.png",alt:"image 20220318173111382"}}),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220318173121785","data-src":"https://s1.imagehub.cc/images/2024/11/24/d656b3bb6c7e8d47c0c8e2f2d9a1ea14.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("b = a.substr(6);\t指的是把a的索引为六的位置往后切出来给b，（a从0开始数，因为是索引）World.Hello C++")]),a._v(" "),s("p",[a._v("注：这样并不改变a")]),a._v(" "),s("p",[a._v("如果是两个参数，b = a.substr(6.5)指的是从a的索引为6的位置往后切五个")]),a._v(" "),s("p",[s("strong",[a._v("compare")])]),a._v(" "),s("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://s1.imagehub.cc/images/2024/11/24/76f7257a637085a586bf5f88091b6f8b.png",alt:"image 20220318173727092"}}),a._v(" "),s("p",[a._v("compare顾名思义是比较，如果两个值相等它就返回0，不想等的话就返回负1，")]),a._v(" "),s("p",[a._v("在本文第3行里面，我们是拿a和b做比较，因为不相等所以返回-1")]),a._v(" "),s("p",[a._v("在第4行里面我们可以猜一猜参数的含义，前面两个数字应该是索引长度，那么这两个参数是针对a的还是针对后面的language的？很显然是a的，因为如果是language的话，4,8作为参数应该会放在language后面，")]),a._v(" "),s("p",[a._v("所以这句话的意思是说，在a里面从第4位开始取8个元素，看看是否和language相等")]),a._v(" "),s("p",[s("strong",[a._v("find_first_not_of")]),a._v("与"),s("strong",[a._v("find_first_of")])]),a._v(" "),s("p",[a._v("见另一个typora文档《关于C++总搞不会的地方》")]),a._v(" "),s("p",[s("strong",[a._v("npos")])]),a._v(" "),s("p",[a._v("之前说过等于-1")]),a._v(" "),s("p",[s("strong",[a._v("getline")])]),a._v(" "),s("h2",{attrs:{id:"-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#-2"}},[a._v("#")]),a._v(" ---------------------------------------")]),a._v(" "),s("h2",{attrs:{id:"sort排序函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#sort排序函数"}},[a._v("#")]),a._v(" sort排序函数")]),a._v(" "),s("p",[a._v("函数原型：")]),a._v(" "),s("p",[a._v("void std::sort(序列的开始位置，序列的结束位置)\t//结束位置是序列最后一个位置的下一个位置（也就是指向空的）")]),a._v(" "),s("p",[a._v("void std::sort(序列的开始位置，序列的结束位置，比较函数)")]),a._v(" "),s("p",[a._v("std::sort的头文件是"),s("code",[a._v("<algorithm>")])]),a._v(" "),s("p",[s("strong",[a._v("作用：")])]),a._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://s1.imagehub.cc/images/2024/11/24/a625b496da3852e70d90d9fb42ca0999.png",alt:"image 20220421190134466"}}),a._v(" "),s("p",[a._v("执行完排序函数，数组里的数按照从小到大排序")]),a._v(" "),s("p",[s("strong",[a._v("用法1：")])]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220421190304766","data-src":"https://s1.imagehub.cc/images/2024/11/24/0fe7b8e15c1a9a88cd7bb3fa6fdcaf7b.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("**用法2：**如果只想对数组位置4-7的部分排序")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://www.imagehub.cc/image/image-20220421190614558.CtElbT",target:"_blank",rel:"noopener noreferrer"}},[s("img",{staticClass:"lazy",attrs:{alt:"image 20220421190614558","data-src":"https://s1.imagehub.cc/images/2024/11/24/daceb75c98981760a99be2998e619c39.md.png",loading:"lazy"}}),s("OutboundLink")],1)]),a._v(" "),s("p",[a._v("（虽然涉及到了8，但是8是不参与排序的，只有30 80 70 50参与排序）")]),a._v(" "),s("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://s1.imagehub.cc/images/2024/11/24/784576160e8f868e41de08b40cc00d94.png",alt:"image 20220421190751663"}}),a._v(" "),s("p",[s("strong",[a._v("用法3：默认是从小到大进行排序，如果你想改变排序的方法，就需要再增加一个参数，这个参数就是你自己写的排序函数，也就是参数里面我们要调函数")])]),a._v(" "),s("p",[a._v("我们要调用的这个函数是有格式要求的")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220421193745507","data-src":"https://s1.imagehub.cc/images/2024/11/24/b2d5ef82660d46ae246d393390b2a0c2.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("注意它的参数和返回类型")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220421194045086","data-src":"https://s1.imagehub.cc/images/2024/11/24/e5be52919e5c7581279c5383334f8e7f.png",loading:"lazy"}})]),a._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://s1.imagehub.cc/images/2024/11/24/372f1728ebce84ba3480e770ba3e80a2.png",alt:"image 20220421194112460"}}),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image-20220421194137663","data-src":"C:%5CUsers%5C%E6%9C%B1%E5%98%89%E5%AE%9C%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220421194137663.png",loading:"lazy"}})]),a._v(" "),s("h2",{attrs:{id:"迭代器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#迭代器"}},[a._v("#")]),a._v(" 迭代器")]),a._v(" "),s("p",[a._v("元素是有顺序的序列，容器是用来装元素的。")]),a._v(" "),s("p",[a._v("迭代器是访问容器的，可以理解为一种指针。")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220421195343055","data-src":"https://s1.imagehub.cc/images/2024/11/24/5ad1214da80acee56c7513b8423cb932.png",loading:"lazy"}})]),a._v(" "),s("p",[a._v("注意字幕")]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220421200112396","data-src":"https://s1.imagehub.cc/images/2024/11/24/c38fdd8e6d84bb11abaec013ad555e9b.png",loading:"lazy"}})]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220421200130281","data-src":"https://s1.imagehub.cc/images/2024/11/24/0b94fa21b0cc83838f814ec61bb4c66b.png",loading:"lazy"}})]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220421200403214","data-src":"https://s1.imagehub.cc/images/2024/11/24/a33ce04b90d3d13f36181829af3eaec7.png",loading:"lazy"}})]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220421200430099","data-src":"https://s1.imagehub.cc/images/2024/11/24/168a4ae7ae184d7de855092c94e771b7.png",loading:"lazy"}})]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220421200643772","data-src":"https://s1.imagehub.cc/images/2024/11/24/63ec9e91c424543ed4f5f15ae8c4fe37.png",loading:"lazy"}})]),a._v(" "),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220421200747727","data-src":"https://s1.imagehub.cc/images/2024/11/24/4e2a1f0f8aeca4e40b4f1701971fd29f.png",loading:"lazy"}})]),a._v(" "),s("h2",{attrs:{id:"迭代器库常用函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#迭代器库常用函数"}},[a._v("#")]),a._v(" 迭代器库常用函数")]),a._v(" "),s("h2",{attrs:{id:"stl-vector-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stl-vector-2"}},[a._v("#")]),a._v(" STl&vector")]),a._v(" "),s("p",[a._v("vector相当于数组，大小不用指定，通过你输入的大小自动识别。")]),a._v(" "),s("p",[a._v("size()\t//返回vector元素数量的大小")]),a._v(" "),s("p",[a._v("empty()\t//返回数组是否为空，如果有，则不为空，返回0。")]),a._v(" "),s("p",[a._v("clear()")]),a._v(" "),s("p",[a._v("front()\t//返回数组第一个元素的值   back()\t//返回数组最后一个元素的值")]),a._v(" "),s("p",[a._v("push_back()//插入一个数在vector里面  pop_back()//弹出vector末尾的元素")]),a._v(" "),s("p",[a._v("begin()  end()迭代器")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("    vector<int>v;\t//vector是名字 int是类型 可以换成其他数据结构类型 v是变量名\n\t\t//兄弟们初始化还是要有的，当然也可以声明一下大小哈vector<int>v(10);初始化10个默认为0的数\n\t\t//初始化10个默认为1的元素\n\n//插入\nv.push_back(4);\t//a[0]=4;\nv.push_back(2); //a[1]=2;\n//访问或遍历\ncout<<v[0]<<endl;\nfor(int i = 0;i<v.size();i++){\n    cout<<v[i]<<endl;\n}\n//判空\ncout<<v.empty()<<endl;\t//0 即不为空\n\n//清空 (clear)\ncout<<v.size()<<endl;\t//2(之前我们插入了两个元素)\nv.clear();\t//清空元素而非内存\ncout<<v.size()<<endl;\t//0\n\n//⭐迭代器begin();\tend();\n//迭代器用来访问vector的每一个元素\nvector<int>::iterator it;\t//定义一个类型为vector<int>迭代器\nfor(it=v.begin();it!=v.begin();it++){\n    cout<<it<<endl;\n}\n//[]索引\nv[0]=1000;\t\n//[]比较运算\nsort(v.begin(),v.end());\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br"),s("span",{staticClass:"line-number"},[a._v("14")]),s("br"),s("span",{staticClass:"line-number"},[a._v("15")]),s("br"),s("span",{staticClass:"line-number"},[a._v("16")]),s("br"),s("span",{staticClass:"line-number"},[a._v("17")]),s("br"),s("span",{staticClass:"line-number"},[a._v("18")]),s("br"),s("span",{staticClass:"line-number"},[a._v("19")]),s("br"),s("span",{staticClass:"line-number"},[a._v("20")]),s("br"),s("span",{staticClass:"line-number"},[a._v("21")]),s("br"),s("span",{staticClass:"line-number"},[a._v("22")]),s("br"),s("span",{staticClass:"line-number"},[a._v("23")]),s("br"),s("span",{staticClass:"line-number"},[a._v("24")]),s("br"),s("span",{staticClass:"line-number"},[a._v("25")]),s("br"),s("span",{staticClass:"line-number"},[a._v("26")]),s("br"),s("span",{staticClass:"line-number"},[a._v("27")]),s("br"),s("span",{staticClass:"line-number"},[a._v("28")]),s("br"),s("span",{staticClass:"line-number"},[a._v("29")]),s("br"),s("span",{staticClass:"line-number"},[a._v("30")]),s("br"),s("span",{staticClass:"line-number"},[a._v("31")]),s("br")])]),s("h2",{attrs:{id:"queue-队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#queue-队列"}},[a._v("#")]),a._v(" Queue（队列）")]),a._v(" "),s("p",[a._v("size( )")]),a._v(" "),s("p",[a._v("empty( )")]),a._v(" "),s("p",[a._v("push( )\t//向队尾插入一个元素")]),a._v(" "),s("p",[a._v("front( )\t//返回队头元素")]),a._v(" "),s("p",[a._v("back( )\t//返回队尾元素")]),a._v(" "),s("p",[a._v("pop( )\t//弹出队首元素")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("queue<int> qu;\t//int,float,double,string\n\nqu.push(8);\t\t//插入是从队尾插入（出的话从另一端出）\nqu.push(2);\nqu.push(4);\ncout<<qu.size();\t\nint temp=qu.front();\t//8\nqu.pop();\ntemp=qu.front();\t\t//2\nint temp=qu.back();\t\t//4\n\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br")])]),s("h2",{attrs:{id:"list"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[a._v("#")]),a._v(" list")]),a._v(" "),s("p",[a._v("内部是双向链表")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("//注意下面这个int和string是我们自己为了做题写的类型\nlist<pair<int,string> > c;\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[s("img",{staticClass:"lazy",attrs:{alt:"image 20220423003140735","data-src":"https://s1.imagehub.cc/images/2024/11/24/ddbd0a6eb64c0c6db90b56b58f8534b7.png",loading:"lazy"}})]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('c.pop_back();\t//删除容器最后一个元素\nc.pop_front();\t//删除容器第一个元素\n\n//list元素不是可以随机访问的，所以想修改某个元素不能像vector那样v[i]=a那么轻易，需要使用迭代器操作\nlist<pair<int,string> >::iterator it = c.begin();//把begin赋给it\nadvance(it,1);\t//让迭代器it前进一位\n*it = Make_pair(77,"hsi");\nfor(it=c.begin();it!=c.end();++it){\n    cout<<it->first<<it->second.c_str());\n}\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br")])]),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("int Binary_Search(SSTable ST,int key){\n    int low=1,high=ST.len,mid;\n    while(low<=high){\n        mid=(low+high)/2;\n        if(key<ST[mid])high=mid-1;\n        if(key>ST[mid])low=mid+1;\n        if(key==ST[mid])return mid;\n    }\n    r\n}\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br")])])])}),[],!1,null,null,null);s.default=e.exports}}]);